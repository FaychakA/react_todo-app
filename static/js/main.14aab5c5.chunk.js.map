{"version":3,"sources":["components/Header/Header.js","components/TodoList/TodoList.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","state","currentValue","handleValue","event","setState","target","value","handleAddTodo","preventDefault","split","join","props","addTodo","title","id","Date","completed","className","onSubmit","this","placeholder","onChange","React","Component","TodoList","items","filter","changeCompleted","isToggledAll","changeAllCompleted","removeTodo","onFiltered","arr","el","onRemove","length","type","checked","htmlFor","map","key","onClick","Footer","todos","handleFilter","handleClearCompleted","isVisible","filterName","onFilter","currentFilterName","href","App","newTodo","checkAnythingCompleted","checkAllCompleted","every","newArray","isAnyElementCompleted","some","areAllElementCompleted","initialState","localStorage","getItem","parsedState","JSON","parse","stringifiedState","stringify","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14aab5c5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    currentValue: '',\n  };\n\n  handleValue = (event) => {\n    this.setState({\n      currentValue: event.target.value,\n    });\n  };\n\n  handleAddTodo = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      currentValue: '',\n    });\n\n    if (this.state.currentValue.split(' ').join('')) {\n      this.props.addTodo({\n        title: this.state.currentValue,\n        id: +new Date(),\n        completed: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.handleAddTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.currentValue}\n            onChange={this.handleValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = (\n  {\n    items,\n    filter,\n    changeCompleted,\n    isToggledAll,\n    changeAllCompleted,\n    removeTodo,\n  },\n) => {\n  const onToggle = (id) => {\n    changeCompleted(id);\n  };\n\n  const onFiltered = (arr) => {\n    if (filter === 'All') {\n      return arr;\n    }\n\n    if (filter === 'Active') {\n      return arr.filter(el => !el.completed);\n    }\n\n    if (filter === 'Completed') {\n      return arr.filter(el => el.completed);\n    }\n\n    return null;\n  };\n\n  const onRemove = (event) => {\n    removeTodo(+event.target.id);\n  };\n\n  return (\n    <section className=\"main\">\n      {!!items.length && (\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={isToggledAll}\n          onChange={() => changeAllCompleted()}\n        />\n      )}\n\n      {!!items.length && (\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      )}\n\n      <ul className=\"todo-list\">\n        {onFiltered(items).length === 0\n        || onFiltered(items).map(el => (\n          <li\n            key={el.id}\n            className={el.completed ? 'completed' : ''}\n          >\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={`todo-${el.id}`}\n                checked={el.completed}\n                onChange={() => onToggle(el.id)}\n              />\n              <label htmlFor={`todo-${el.id}`}>{el.title}</label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                id={el.id}\n                onClick={onRemove}\n              />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  isToggledAll: PropTypes.bool.isRequired,\n  changeAllCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (\n  {\n    todos,\n    handleFilter,\n    handleClearCompleted,\n    isVisible,\n    filterName,\n  },\n) => {\n  const onFilter = (currentFilterName) => {\n    handleFilter(currentFilterName);\n  };\n\n  const onCompleted = () => {\n    handleClearCompleted();\n  };\n\n  return (\n    <>\n      {!!todos.length && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${todos.filter(el => el.completed === false)\n              .length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={filterName === 'All' ? 'selected' : ''}\n                onClick={() => onFilter('All')}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={filterName === 'Active' ? 'selected' : ''}\n                onClick={() => onFilter('Active')}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={filterName === 'Completed' ? 'selected' : ''}\n                onClick={() => onFilter('Completed')}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n          {isVisible && (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={onCompleted}\n            >\n              Clear completed\n            </button>\n          )}\n        </footer>\n      )\n      }\n    </>\n  );\n};\n\nexport default Footer;\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  filterName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport TodoList from './components/TodoList/TodoList';\nimport Footer from './components/Footer/Footer';\n\nconst LOCALSTORAGE_STATE = 'initialState';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isToggledAll: false,\n    filterName: 'All',\n    isVisible: false,\n  };\n\n  componentDidMount() {\n    const initialState = localStorage.getItem(LOCALSTORAGE_STATE);\n    const parsedState = initialState && JSON.parse(initialState);\n\n    if (parsedState) {\n      this.setState({\n        ...parsedState,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const stringifiedState = JSON.stringify(this.state);\n\n    localStorage.setItem(LOCALSTORAGE_STATE, stringifiedState);\n  }\n\n  addTodo = (newTodo) => {\n    this.setState(({ todos }) => ({\n      todos: [...todos, newTodo],\n      isToggledAll: false,\n    }));\n  };\n\n  changeCompleted = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map(el => (el.id === id\n        ? {\n          ...el,\n          completed: !el.completed,\n        }\n        : el)),\n      isToggledAll: false,\n    }), () => {\n      this.checkAnythingCompleted();\n      this.checkAllCompleted();\n    });\n  };\n\n  changeAllCompleted = () => {\n    if (this.state.todos.every(el => el.completed === false)) {\n      this.setState(state => ({\n        todos: state.todos.map(el => ({\n          ...el,\n          completed: !el.completed,\n        })),\n        isToggledAll: true,\n      }), () => this.checkAnythingCompleted());\n\n      return;\n    }\n\n    if (this.state.todos.every(el => el.completed === true)) {\n      this.setState(state => ({\n        todos: state.todos.map(el => ({\n          ...el,\n          completed: !el.completed,\n        })),\n        isToggledAll: false,\n      }), () => this.checkAnythingCompleted());\n\n      return;\n    }\n\n    this.setState(state => ({\n      todos: state.todos.map(el => ({\n        ...el,\n        completed: true,\n      })),\n      isToggledAll: true,\n    }));\n  };\n\n  handleFilter = (filterName) => {\n    this.setState({\n      filterName,\n    });\n  };\n\n  removeTodo = (id) => {\n    const { todos } = this.state;\n    const newArray = todos.filter(el => el.id !== id);\n\n    this.setState({\n      todos: newArray,\n    });\n  };\n\n  handleClearCompleted = () => {\n    const { todos } = this.state;\n    const newArray = todos.filter(el => !el.completed);\n\n    this.setState({\n      todos: newArray,\n      isVisible: false,\n    });\n  };\n\n  checkAnythingCompleted = () => {\n    const { todos } = this.state;\n    const isAnyElementCompleted = todos.some(el => el.completed);\n\n    this.setState({\n      isVisible: isAnyElementCompleted,\n    });\n  };\n\n  checkAllCompleted = () => {\n    const { todos } = this.state;\n    const areAllElementCompleted = todos.every(el => el.completed);\n\n    this.setState({\n      isToggledAll: areAllElementCompleted,\n    });\n  };\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header addTodo={this.addTodo} />\n\n        <TodoList\n          items={this.state.todos}\n          filter={this.state.filterName}\n          changeCompleted={this.changeCompleted}\n          isToggledAll={this.state.isToggledAll}\n          changeAllCompleted={this.changeAllCompleted}\n          removeTodo={this.removeTodo}\n        />\n\n        <Footer\n          todos={this.state.todos}\n          handleFilter={this.handleFilter}\n          handleClearCompleted={this.handleClearCompleted}\n          isVisible={this.state.isVisible}\n          filterName={this.state.filterName}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}